<?php
class Person {
	private $name;
	private $lastname;
	private $age;
	private $hp;
	private $mother;
	private $father;

	function __construct($name, $lastname, $age, $mother = null, $father = null) {

		$this->name = $name;
		$this->lastname = $lastname;
		$this->age = $age;
		$this->mother = $mother;
		$this->father = $father;
		$this->hp = 100;
	}

	function sayHi($name) {

		return "Hi $name, I`m " . $this->name;
	}

	function setHp($hp) {

		if ($this->hp + $hp >= 100) $this->hp = 100;
		else $this->hp = $this->hp + $hp;
	}

	function getHp() {

		return $this->hp;
	}

	function getName() {

		return $this->name;
	}

	function getLastname() {

		return $this->lastname;
	}

	function getAge() {

		return $this->age;
	}

	function getMother() {

		return $this->mother;
	}

	function getFather() {

		return $this->father;
	}

	function getInfo() {

		// return "<h3>A few words about myself:</h3>"."<br>My name is: ".$this->getName()."<br> my lastname is: ".$this->getLastname()."<br> my age is: ".$this->getAge()."<br> my father is: ".$this->getFather()->getName()."<br> my mother is: ".$this->getMother()->getName()."<br> my grandfather is: ".$this->getMother()->getFather()->getName();

		return "<br>.....................................................................<br><h3>A few words about myself:</h3>"."My name is ".$this->getName()." ".$this->getLastname().". I am ".$this->getAge()." years old.<br><br> My father is ".$this->getFather()->getName()." ".$this->getFather()->getLastname().". He is ".$this->getFather()->getAge()." years old.<br> My mother is ".$this->getMother()->getName()." ".$this->getMother()->getLastname().". She is ".$this->getMother()->getAge()." years old.<br><br> My grandfather is ".$this->getMother()->getFather()->getName()." ".$this->getMother()->getFather()->getLastname().". He is ".$this->getMother()->getFather()->getAge()." years old.<br> My grandmother is ".$this->getMother()->getMother()->getName()." ".$this->getMother()->getMother()->getLastname().". She is ".$this->getMother()->getMother()->getAge()." years old.<br><br> My grandfather#2 is ".$this->getFather()->getMother()->getName()." ".$this->getFather()->getMother()->getLastname().". He is ".$this->getFather()->getMother()->getAge()." years old.<br> My grandmother#2 is ".$this->getFather()->getFather()->getName()." ".$this->getFather()->getFather()->getLastname().". She is ".$this->getFather()->getFather()->getAge()." years old."
		;
	}
}
// Здоровье человека не может быть выше 100
$ivan = new Person("Ivan", "Sidorov", 70);
$anna = new Person("Anna", "Sidorova", 69);

$igor = new Person("Igor", "Petrov", 68);
$svetlana = new Person("Svetlana", "Petrova", 67);

$alex = new Person("Alex", "Ivanov", 42, $ivan, $anna);
$olga = new Person("Olga", "Ivanova", 42, $svetlana, $igor);
$valera = new Person("Valera", "Ivanov", 15, $olga, $alex);

echo $valera->getName() . "<br>";
//echo $valera->mother->getName(); Так работать не будет, только через геттер
echo $valera->getMother()->getName() . "<br>"; //Получаем маму Валеры
echo $valera->getMother()->getFather()->getName();//Получаем дедушку Валеры
echo $valera->getInfo();

// $igor = new Person("Igor", "Petrov", 38);
// echo $alex->sayHi($igor->name);
// $alex->name = "Alex";
// echo $alex->name;
// $medKit = 50;

// $alex->setHp(-30); //Упал
// echo $alex->getHp() . "<br>";
// $alex->setHp($medKit);
// echo $alex->getHp();
// Задача на практическую часть:
// Создать как минимум 2 бабушки, 2 дедушки по линии каждого из родителей.
// Вывести на экран информацию о всей родне сына
